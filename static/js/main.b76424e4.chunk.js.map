{"version":3,"sources":["components/SearchBar/SearchBar.module.css","assets/icon-arrow.svg","components/SearchBar/index.js","assets/icon-arrow-black.svg","components/IpInfoCollapsible/index.js","components/Map/index.js","components/Snackbar/index.js","utils/IPValidation.js","utils/DomainValidation.js","components/App/index.js","reportWebVitals.js","index.js"],"names":["module","exports","SearchBar","props","useState","inputValue","setInputValue","onSubmit","event","preventDefault","onSearch","className","css","container","type","placeholder","value","onChange","target","alt","src","icon","IpInfoCollapsible","collapsibleRef","useRef","info","ip","location","timezone","isp","ref","data-pivot","onClick","parent","box","firstElementChild","boxHeight","offsetHeight","list","children","offsets","i","length","push","collapsedHeight","scaleFactor","style","setProperty","offsetY","expand","current","classList","toggle","Map","coord","lat","lng","mapRef","key","process","useEffect","map","L","zoomControl","customIcon","iconUrl","iconAnchor","marker","addTo","tileLayer","token","setView","setLatLng","remove","undefined","useMap","id","height","MOUNTING","MOUNTED","UNMOUNTING","UNMOUNTED","Snackbar","bg","show","background","status","animationType","state","setState","animation","onAnimationEnd","FetchingSnackbar","ErrorSnackbar","validate","hasNotOnlyDigitAndDot","hasNotOnlyHexAndColon","startOrEndWithColon","hasMoreThanOneDoubleColon","hasThreeOrMoreConsecutiveColon","hasDoubleColon","hasMoreThanSixColon","hasEightValidSegments","isOutOfRange","num","start","end","isIPv4","test","segments","split","el","parseInt","segment","isNaN","allSegmentsInRange","toPreferredFormat","numOfZeroSegments","zeroSegments","Array","fill","join","replace","addZeroSegments","hasForbiddenChars","hasForbiddenHyphenPosition","hasAlpha","hasUnicodeChars","isValidLabel","label","isDomain","domain","normalize","URL","host","err","toAscii","array","labels","pop","isValidTldLabel","useIpify","query","setQuery","result","setResult","isFetching","setIsFetching","isError","setIsError","errorType","setErrorType","lastQueryRef","stale","search","currentQuery","fetch","then","response","ok","statusText","json","data","city","catch","errorMessage","message","App","setHeight","dimesions","document","body","getBoundingClientRect","useVirtualKeyboardFix","str","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b76424e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SearchBar_container__2mcb9\"};","export default __webpack_public_path__ + \"static/media/icon-arrow.2eaaa5ee.svg\";","import { useState } from 'react';\r\nimport css from './SearchBar.module.css';\r\nimport icon from '../../assets/icon-arrow.svg';\r\n\r\nconst SearchBar = (props) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    \r\n    const handleChange = event => {\r\n        setInputValue(event.target.value);\r\n    }\r\n\r\n    const handleSubmit = event => {\r\n        event.preventDefault();\r\n        props.onSearch(inputValue);\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div className={css.container}>\r\n                <input type=\"text\" placeholder=\"Search for any IP address or domain\" value={inputValue} onChange={handleChange} />\r\n                <button type=\"submit\"><img alt=\"arrow\" src={icon}></img></button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default SearchBar;","export default __webpack_public_path__ + \"static/media/icon-arrow-black.51bb1080.svg\";","import './IpInfoCollapsible.css';\r\nimport {useRef} from 'react';\r\nimport icon from '../../assets/icon-arrow-black.svg';\r\n\r\nconst expand = (parent) => {\r\n    const box = parent.firstElementChild;\r\n    const boxHeight = box.offsetHeight;\r\n    const list = box.children;\r\n    let offsets = [];\r\n    for (let i = 0; i < list.length; i++) {\r\n        offsets.push(list[i].offsetHeight);\r\n    }\r\n\r\n    const collapsedHeight = offsets[2] + offsets[7];\r\n    const scaleFactor = 1 / (boxHeight / collapsedHeight);\r\n\r\n    box.style.setProperty(\"--scale\", scaleFactor);\r\n    parent.style.setProperty(\"--translate\", -(boxHeight - collapsedHeight) + \"px\");\r\n    for (let i = 0, offsetY = 0; i < list.length - 1; i++) {\r\n        list[i].style.setProperty(\"--translate\", -offsetY + \"px\");\r\n        offsetY += offsets[i];\r\n    }\r\n};\r\n\r\nconst IpInfoCollapsible = (props) => {\r\n    const collapsibleRef = useRef(null);\r\n    const {ip, location, timezone, isp} = props.info;\r\n\r\n    const handleClick = () => {\r\n        expand(collapsibleRef.current)\r\n        collapsibleRef.current.classList.toggle(\"open\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"collapsible open\" ref={collapsibleRef}>\r\n            <dl className=\"collapsible-bg\">\r\n                <div className=\"dataItem\">\r\n                    <dt>ip address</dt>\r\n                    <dd>{ip}</dd>\r\n                </div>\r\n                <hr />\r\n                <div className=\"dataItem\" data-pivot>\r\n                    <dt>location</dt>\r\n                    <dd>{location}</dd>\r\n                </div>\r\n                <hr />\r\n                <div className=\"dataItem\">\r\n                    <dt>timezone</dt>\r\n                    <dd>{timezone}</dd>\r\n                </div>\r\n                <hr />\r\n                <div className=\"dataItem\">\r\n                    <dt>isp</dt>\r\n                    <dd>{isp}</dd>\r\n                </div>\r\n                <div className=\"collapsible-btn\"  onClick={handleClick}>\r\n                    <img src={icon} alt=\"arrow\"></img>\r\n                </div>\r\n            </dl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default IpInfoCollapsible;","import {useEffect, useRef} from 'react';\r\nimport L from 'leaflet';\r\n\r\nconst useMap = (lat, lng, id = \"map\") => {\r\n    const mapRef = useRef()\r\n    const key = process.env.REACT_APP_MAPTILER_KEY;\r\n\r\n    useEffect(() => {\r\n        if (!mapRef.current) {\r\n            const map = L.map('map', {zoomControl: false});\r\n            const customIcon = L.icon(\r\n                {\r\n                    iconUrl: \"icon-location.svg\",\r\n                    iconAnchor: [23, 56],\r\n                });\r\n            const marker = L.marker([lat, lng], {icon: customIcon}).addTo(map);\r\n            L.tileLayer(\"https://api.maptiler.com/maps/streets/{z}/{x}/{y}.png?{token}\", {token: `key=${key}`}).addTo(map);\r\n\r\n            mapRef.current = {map, marker}\r\n        }\r\n\r\n        mapRef.current.map.setView([lat, lng], 16);\r\n        mapRef.current.marker.setLatLng([lat, lng]);\r\n    });\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            mapRef.current.map.remove();\r\n            mapRef.current = undefined;\r\n        }\r\n    }, []);\r\n}\r\n\r\nconst Map = ({coord: {lat, lng} = {lat: 0, lng: 0}}) => {\r\n    useMap(lat, lng);\r\n\r\n    return (\r\n        <div id=\"map\" style={{height: \"100%\"}}></div>\r\n    );\r\n}\r\n\r\nexport default Map;","import './Snackbar.css';\r\nimport { useState } from 'react';\r\n\r\nconst [MOUNTING, MOUNTED, UNMOUNTING, UNMOUNTED] = [\"MOUNTING\", \"MOUNTED\", \"UNMOUNTING\", \"UNMOUNTED\"];\r\n\r\nconst Snackbar = ({bg = \"black\", show = false, children}) => {\r\n    const background = bg;\r\n    let [state, setState] = useState({\r\n        status: UNMOUNTED,\r\n        animationType: \"slide-in\"\r\n    });\r\n    \r\n    if (state.status === UNMOUNTED && show) {\r\n        state = { status: MOUNTING, animationType: \"slide-in\" };\r\n        setState(state);\r\n    }\r\n\r\n    if (state.status === MOUNTED && !show) {\r\n        state = { status: UNMOUNTING, animationType: \"slide-out\" };\r\n        setState(state);\r\n    }\r\n\r\n    if (state.status === MOUNTING) show = true;\r\n    if (state.status === UNMOUNTING) show = true;\r\n\r\n    const handleAnimationEnd = () => {\r\n        const status = state.status === MOUNTING ? MOUNTED : UNMOUNTED;\r\n\r\n        setState({ status, animationType: state.animationType });\r\n    }\r\n\r\n    if (!show)\r\n        return null;\r\n\r\n    return (\r\n        <div className=\"snackbar\" style={{background, animation: `300ms ${state.animationType} 1 forwards`}} onAnimationEnd={handleAnimationEnd} >\r\n            <div className=\"container\">{children}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const FetchingSnackbar = ({show}) => {\r\n    return (\r\n        <Snackbar bg=\"#1b1b1b\" show={show}>Retriving Data...</Snackbar>\r\n    )\r\n}\r\n\r\nexport const ErrorSnackbar = ({show, children}) => {\r\n    return (\r\n        <Snackbar bg=\"#f22c2c\" show={show}>{children}</Snackbar>\r\n    )\r\n}","const validate = {\r\n    hasNotOnlyDigitAndDot: /[^0-9.]/,\r\n    hasNotOnlyHexAndColon: /[^A-Fa-f0-9:]/,\r\n    startOrEndWithColon: /^:[A-Fa-f0-9]|[A-Fa-f0-9]:$/,\r\n    hasMoreThanOneDoubleColon: /::.*::/,\r\n    hasThreeOrMoreConsecutiveColon: /:{3,}/,\r\n    hasDoubleColon: /::/,\r\n    hasMoreThanSixColon: /(.*:){7}/,\r\n    hasEightValidSegments: /^[A-Fa-f0-9]{1,4}(:[A-Fa-f0-9]{1,4}){7}$/\r\n}\r\n\r\nconst isOutOfRange = (num, start, end) => {\r\n    return (num < start || num > end);\r\n}\r\n\r\nconst allSegmentsInRange = (segments, start, end) => {\r\n    for (let segment of segments) {\r\n        if (isNaN(segment) || isOutOfRange(segment, start, end))\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nconst isIPv4 = (ip) => {\r\n    if (ip.length > 15)\r\n        return false;\r\n\r\n    if (validate.hasNotOnlyDigitAndDot.test(ip))\r\n        return false;\r\n\r\n    const segments = ip.split('.').map(el => parseInt(el));\r\n\r\n    if (segments.length !== 4)\r\n        return false;\r\n\r\n    return allSegmentsInRange(segments, 0, 255);\r\n}\r\n\r\nconst addZeroSegments = (ip) => {\r\n    const numOfZeroSegments = (8 - ip.split(\":\").length) + 1;\r\n    const zeroSegments = new Array(numOfZeroSegments).fill(\"0\").join(\":\");\r\n\r\n    return ip.replace(/\\$/, zeroSegments);\r\n}\r\n\r\nconst toPreferredFormat = (ip) => {\r\n    ip = ip.replace(/::/, \":$:\");\r\n    ip = ip.replace(/^:|:$/g, \"\");\r\n\r\n    return addZeroSegments(ip);\r\n}\r\n\r\nconst isIPv6 = (ip) => {\r\n    if (ip.length > 39)\r\n        return false;\r\n\r\n    if (validate.hasNotOnlyHexAndColon.test(ip))\r\n        return false;\r\n\r\n    if (validate.startOrEndWithColon.test(ip))\r\n        return false;\r\n\r\n    if (validate.hasMoreThanOneDoubleColon.test(ip))\r\n        return false;\r\n\r\n    if (validate.hasThreeOrMoreConsecutiveColon.test(ip))\r\n        return false;\r\n\r\n    if (validate.hasMoreThanSixColon.test(ip) && validate.hasDoubleColon.test(ip))\r\n        return false;\r\n\r\n    if (validate.hasDoubleColon.test(ip))\r\n        ip = toPreferredFormat(ip);\r\n\r\n    return validate.hasEightValidSegments.test(ip);\r\n}\r\n\r\nexport { isIPv4, isIPv6 };","const validate = {\r\n    hasForbiddenChars: /[^A-Za-z0-9-]/,\r\n    hasForbiddenHyphenPosition: /^-|-$/,\r\n    hasAlpha: /[A-Za-z-]/,\r\n    /*eslint-disable-next-line no-control-regex*/\r\n    hasUnicodeChars: /[^\\x00-\\x7f]/\r\n}\r\n\r\nconst toAscii = (domain) => {\r\n    domain = domain.normalize(\"NFC\");\r\n\r\n    try {\r\n        return new URL(`http://${domain}`).host;\r\n    }\r\n    catch (err) {\r\n        return domain;\r\n    }\r\n}\r\n\r\nconst lastElement = (array) => {\r\n    return array[array.length - 1];\r\n}\r\n\r\nconst isValidLabel = (label) => {\r\n    // a label can contain a number of octets between 1 and 63\r\n    if (label.length === 0 || label.length > 63)\r\n        return false;\r\n\r\n    // label can contain only LDH (letters, digits, hyphen)\r\n    if (validate.hasForbiddenChars.test(label))\r\n        return false;\r\n\r\n    // hyphen can't be at the beggining or at the end of a label\r\n    if (validate.hasForbiddenHyphenPosition.test(label))\r\n        return false;\r\n\r\n    return true;\r\n}\r\n\r\nconst isValidTldLabel = (label) => {\r\n    // a TLD (Top Level Domain) label can't contain only digits\r\n    if (validate.hasAlpha.test(label))\r\n        return isValidLabel(label);\r\n\r\n    return false;\r\n}\r\n\r\nconst isDomain = (domain) => {\r\n    if (typeof domain !== 'string')\r\n        return false;\r\n        \r\n    // domain name can't be more than 255 characters\r\n    if (domain.length === 0 || domain.length > 255)\r\n        return false;\r\n\r\n    // domain name containing Unicode chars must be converted to ascii\r\n    if (validate.hasUnicodeChars.test(domain))\r\n        domain = toAscii(domain);\r\n\r\n    const labels = domain.split(\".\");\r\n    \r\n    // eliminate root if present\r\n    if (lastElement(labels) === \"\")\r\n        labels.pop();\r\n\r\n    // validate TLD (Top Level Domain) label\r\n    if (!isValidTldLabel(labels.pop()))\r\n        return false;\r\n\r\n    // validate remaining labels\r\n    for (let label of labels) {\r\n        if (!isValidLabel(label))\r\n            return false;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\nexport default isDomain;","import './App.css';\r\nimport SearchBar from '../SearchBar';\r\nimport IpInfoCollapsible from '../IpInfoCollapsible';\r\nimport Map from '../Map';\r\nimport {FetchingSnackbar, ErrorSnackbar} from '../Snackbar';\r\nimport {useState, useEffect, useRef} from 'react';\r\nimport {isIPv4, isIPv6} from '../../utils/IPValidation';\r\nimport isDomain from '../../utils/DomainValidation';\r\n\r\n// set fixed height to avoid viewport resize when displaying virtual keyboard\r\nfunction useVirtualKeyboardFix() {\r\n  const [height, setHeight] = useState(\"100%\");\r\n\r\n  useEffect(() => {\r\n    const dimesions = document.body.getBoundingClientRect();\r\n    setHeight(dimesions.height + \"px\");\r\n  }, []);\r\n\r\n  return height;\r\n}\r\n\r\nfunction useIpify() {\r\n  const [query, setQuery] = useState(\"\");\r\n  const [result, setResult] = useState();\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [isError, setIsError] = useState(false);\r\n  const [errorType, setErrorType] = useState(\"\");\r\n  const lastQueryRef = useRef({stale: false});\r\n\r\n  useEffect(() => {\r\n    const endpoint = process.env.REACT_APP_IPINFO_ENDPOINT;\r\n    const key = process.env.REACT_APP_IPINFO_KEY;\r\n    const currentQuery = {stale: false};\r\n    lastQueryRef.current.stale = true;\r\n    lastQueryRef.current = currentQuery;\r\n\r\n    let search;\r\n\r\n    if (query === \"\")\r\n      search = \"ipAddress=\";\r\n    if (isIPv4(query) || isIPv6(query))\r\n      search = `ipAddress=${query}`;\r\n    if (isDomain(query))\r\n      search = `domain=${query}`;\r\n    if (!search) {\r\n      setIsError(true);\r\n      setErrorType(\"Invalid Input\");\r\n      return;\r\n    }\r\n\r\n    setIsFetching(true);\r\n    setIsError(false);\r\n\r\n    fetch(`${endpoint}?apiKey=${key}&${search}`)\r\n      .then(response => {\r\n        if (!response.ok) {\r\n          throw response.statusText;\r\n        }\r\n        \r\n        return response.json();\r\n      })\r\n      .then(data => {\r\n        if (currentQuery.stale) {\r\n          return;\r\n        }\r\n        \r\n        setIsFetching(false);\r\n        setResult(\r\n          {\r\n            ip: data.ip,\r\n            location: data.location.city,\r\n            timezone: `UTC ${data.location.timezone}`,\r\n            isp: data.isp,\r\n            coord: {lat: data.location.lat, lng: data.location.lng}\r\n          }\r\n        );\r\n      })\r\n      .catch(err => {\r\n        if (currentQuery.stale)\r\n          return;\r\n        \r\n        const errorMessage = err.message === \"Failed to fetch\" ? \"Connection Unavailable\" : \"Data Not Found\";\r\n        setIsError(true);\r\n        setErrorType(errorMessage);\r\n        setIsFetching(false);\r\n        setResult();\r\n      });\r\n  }, [query]);\r\n\r\n  return [{result, isFetching, isError, errorType}, setQuery];\r\n}\r\n\r\nfunction App() {\r\n  const height = useVirtualKeyboardFix();\r\n  const [{result, isFetching, isError, errorType}, search] = useIpify();\r\n\r\n  const handleSearch = (str) => {\r\n    if (str === \"\")\r\n      return;\r\n\r\n    search(str);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\" style={{height: height}}>\r\n      <header>\r\n        <h1>IP Address Tracker</h1>\r\n        <SearchBar onSearch={handleSearch} />\r\n        <div className=\"result-container\">\r\n          {result && <IpInfoCollapsible info={result}/>}\r\n        </div>\r\n      </header>\r\n      <div className=\"map-container\">\r\n        <Map coord={result && result.coord}/>\r\n      </div>\r\n      {<ErrorSnackbar show={isError}>{errorType}</ErrorSnackbar>}\r\n      {<FetchingSnackbar show={isFetching} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}